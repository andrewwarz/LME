---
# Quadlet setup tasks for podman role

- name: Copy config files /opt/lme/config
  copy:
    src: "{{ clone_directory }}/config/"
    dest: /opt/lme/config/
    owner: "{{ install_user }}"
    group: "{{ install_user }}"
    mode: '0644'
  become: yes

- name: Create /etc/containers/systemd
  file:
    path: /etc/containers/systemd
    state: directory
    owner: "root"
    group: "root"
    mode: '0744'
  become: yes

- name: Copy quadlet files to /etc/containers/systemd 
  copy:
    src: "{{ clone_directory }}/quadlet/"
    dest: /etc/containers/systemd/
    owner: "root"
    group: "root"
    mode: '0644'
  become: yes

- name: copy lme.service to /etc/systemd/system
  copy:
    src: "{{ clone_directory }}/quadlet/lme.service"
    dest: "/etc/systemd/system/lme.service"
    owner: "root"
    group: "root"
    mode: '0644'
  become: yes

# Ensure quadlet helper and systemd generator are available from standard paths
- name: Ensure /usr/libexec/podman exists
  file:
    path: /usr/libexec/podman
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Link quadlet helper into /usr/libexec/podman
  file:
    src: /nix/var/nix/profiles/default/libexec/podman/quadlet
    dest: /usr/libexec/podman/quadlet
    state: link
    force: true
  become: yes

- name: Ensure podman systemd generator is linked
  file:
    src: /nix/var/nix/profiles/default/libexec/podman/quadlet
    dest: /usr/lib/systemd/system-generators/podman-system-generator
    state: link
    force: true
  become: yes

- name: Restore contexts on quadlet/generator paths (best-effort)
  command: restorecon -v /usr/libexec/podman/quadlet /usr/lib/systemd/system-generators/podman-system-generator
  changed_when: false
  failed_when: false
  become: yes

# (moved) systemd reload/start to after SELinux module load and restorecon

# ---------------------------------------------------------------------------
# Podman SELinux policy: deploy, compile, load, and label after Podman is set up
# ---------------------------------------------------------------------------
- name: Deploy Podman SELinux policy files
  copy:
    src: "{{ clone_directory }}/ansible/roles/base/files/selinux/podman_policy.te"
    dest: /etc/selinux/lme/podman_policy.te
    owner: root
    group: root
    mode: '0644'
  become: yes
  when:
    - selinux_available | default(false)

- name: Deploy Podman SELinux file contexts
  copy:
    src: "{{ clone_directory }}/ansible/roles/base/files/selinux/podman_policy.fc"
    dest: /etc/selinux/lme/podman_policy.fc
    owner: root
    group: root
    mode: '0644'
  become: yes
  when:
    - selinux_available | default(false)

- name: Compile Podman SELinux module
  shell: |
    set -e
    cd /etc/selinux/lme
    checkmodule -M -m -o podman_policy.mod podman_policy.te
    semodule_package -o podman_policy.pp -m podman_policy.mod -f podman_policy.fc
  args:
    executable: /bin/bash
  become: yes
  when:
    - selinux_available | default(false)
    - (getenforce_out.stdout | default('') | trim) != 'Disabled'

- name: Load Podman SELinux module
  command: semodule -i /etc/selinux/lme/podman_policy.pp
  become: yes
  when:
    - selinux_available | default(false)
    - (getenforce_out.stdout | default('') | trim) != 'Disabled'

- name: Ensure Podman SELinux module enabled
  command: semodule -e podman_policy
  become: yes
  when:
    - selinux_available | default(false)
    - (getenforce_out.stdout | default('') | trim) != 'Disabled'

- name: Restore contexts on quadlet/generator paths
  command: restorecon -Rv \
    /usr/libexec/podman/quadlet \
    /usr/lib/systemd/system-generators/podman-system-generator \
    /usr/lib/systemd/system-generators \
    /etc/systemd/system-generators \
    /etc/containers/systemd \
    /nix/var/nix/profiles/default \
    /nix/store
  changed_when: false
  become: yes
  when:
    - selinux_available | default(false)
    - (getenforce_out.stdout | default('') | trim) != 'Disabled'

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes

- name: Start LME service
  systemd:
    name: lme.service
    state: started
    enabled: yes
  become: yes 