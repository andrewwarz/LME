---
# Red Hat-specific Nix setup

- name: Check if SELinux is installed
  command: which getenforce
  register: selinux_installed
  changed_when: false
  failed_when: false

- name: Check current SELinux status
  command: getenforce
  register: selinux_status
  changed_when: false
  when: selinux_installed.rc == 0

- name: Debug SELinux status
  debug:
    msg: "Current SELinux status: {{ selinux_status.stdout }}"
  when: selinux_installed.rc == 0

- name: Debug when SELinux is not installed
  debug:
    msg: "SELinux is not installed on this system, skipping SELinux configuration"
  when: selinux_installed.rc != 0

- name: Set SELinux to permissive mode for Nix installation
  selinux:
    policy: targeted
    state: permissive
  become: yes
  when: selinux_installed.rc == 0 and selinux_status.stdout == "Enforcing"
  register: selinux_changed

- name: Check if Nix is already installed
  stat:
    path: /nix/var/nix/profiles/default/bin/nix
  register: nix_installed

- name: Create nix installation directory  
  file:
    path: /opt/nix-install
    state: directory
    mode: '0755'
  become: yes
  when: not nix_installed.stat.exists

- name: Create temporary directory for Nix install
  file:
    path: /opt/nix-install/tmp
    state: directory
    mode: '0755'
  become: yes
  when: not nix_installed.stat.exists

- name: Download Nix installer
  get_url:
    url: https://nixos.org/nix/install
    dest: /opt/nix-install/install-nix.sh
    mode: '0755'
  become: yes
  when: not nix_installed.stat.exists

- name: Install Nix package manager
  shell: sh /opt/nix-install/install-nix.sh --daemon --yes
  become: yes
  environment:
    TMPDIR: /opt/nix-install/tmp
  when: not nix_installed.stat.exists
  register: nix_install_result

- name: Debug Nix installation result
  debug:
    var: nix_install_result
  when: debug_mode | default(false) and not nix_installed.stat.exists

- name: Ensure nix-daemon service is started
  systemd:
    name: nix-daemon
    state: started
    enabled: yes
  become: yes
  when: not nix_installed.stat.exists

- name: Add Nix channel
  command: nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
  become: yes
  environment:
    PATH: "{{ ansible_env.PATH }}:/nix/var/nix/profiles/default/bin"

- name: Update Nix channel
  command: nix-channel --update
  become: yes
  environment:
    PATH: "{{ ansible_env.PATH }}:/nix/var/nix/profiles/default/bin"

- name: Check if nix-users group exists
  group:
    name: nix-users
    state: present
  become: yes

- name: Add user to nix-users group
  user:
    name: "{{ install_user }}"
    groups: nix-users
    append: yes
  become: yes

- name: Install required packages
  command: nix-env -iA nixpkgs.docker-compose
  become: yes
  environment:
    PATH: "{{ ansible_env.PATH }}:/nix/var/nix/profiles/default/bin"

- name: Restore SELinux to enforcing mode
  selinux:
    policy: targeted
    state: enforcing
  become: yes
  when: selinux_installed.rc == 0 and selinux_changed is defined and selinux_changed.changed
  register: selinux_restored

- name: Debug SELinux restoration
  debug:
    msg: "SELinux restored to enforcing mode"
  when: selinux_installed.rc == 0 and selinux_restored is defined and selinux_restored.changed
